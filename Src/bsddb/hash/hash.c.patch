*** hash.c.orig	Mon Nov  6 00:34:50 1995
--- hash.c	Sun Mar 11 09:35:00 2001
***************
*** 518,524 ****
--- 518,528 ----
  	else
  		if (wsize != sizeof(HASHHDR)) {
  			errno = EFTYPE;
+ #if defined(__EMX__) && (defined(__MT__) || defined(__ST_MT_ERRNO__))
+ 			hashp->error_no = errno;
+ #else
  			hashp->errno = errno;
+ #endif
  			return (-1);
  		}
  	for (i = 0; i < NCACHED; i++)
***************
*** 549,555 ****
--- 553,563 ----
  
  	hashp = (HTAB *)dbp->internal;
  	if (flag) {
+ #if defined(__EMX__) && (defined(__MT__) || defined(__ST_MT_ERRNO__))
+ 		hashp->error_no = errno = EINVAL;
+ #else
  		hashp->errno = errno = EINVAL;
+ #endif
  		return (ERROR);
  	}
  	return (hash_access(hashp, HASH_GET, (DBT *)key, data));
***************
*** 566,576 ****
--- 574,592 ----
  
  	hashp = (HTAB *)dbp->internal;
  	if (flag && flag != R_NOOVERWRITE) {
+ #if defined(__EMX__) && (defined(__MT__) || defined(__ST_MT_ERRNO__))
+ 		hashp->error_no = errno = EINVAL;
+ #else
  		hashp->errno = errno = EINVAL;
+ #endif
  		return (ERROR);
  	}
  	if ((hashp->flags & O_ACCMODE) == O_RDONLY) {
+ #if defined(__EMX__) && (defined(__MT__) || defined(__ST_MT_ERRNO__))
+ 		hashp->error_no = errno = EPERM;
+ #else
  		hashp->errno = errno = EPERM;
+ #endif
  		return (ERROR);
  	}
  	return (hash_access(hashp, flag == R_NOOVERWRITE ?
***************
*** 587,597 ****
--- 603,621 ----
  
  	hashp = (HTAB *)dbp->internal;
  	if (flag && flag != R_CURSOR) {
+ #if defined(__EMX__) && (defined(__MT__) || defined(__ST_MT_ERRNO__))
+ 		hashp->error_no = errno = EINVAL;
+ #else
  		hashp->errno = errno = EINVAL;
+ #endif
  		return (ERROR);
  	}
  	if ((hashp->flags & O_ACCMODE) == O_RDONLY) {
+ #if defined(__EMX__) && (defined(__MT__) || defined(__ST_MT_ERRNO__))
+ 		hashp->error_no = errno = EPERM;
+ #else
  		hashp->errno = errno = EPERM;
+ #endif
  		return (ERROR);
  	}
  	return (hash_access(hashp, HASH_DELETE, (DBT *)key, NULL));
***************
*** 742,748 ****
--- 766,776 ----
  
  	hashp = (HTAB *)dbp->internal;
  	if (flag && flag != R_FIRST && flag != R_NEXT) {
+ #if defined(__EMX__) && (defined(__MT__) || defined(__ST_MT_ERRNO__))
+ 		hashp->error_no = errno = EINVAL;
+ #else
  		hashp->errno = errno = EINVAL;
+ #endif
  		return (ERROR);
  	}
  #ifdef HASH_STATISTICS
